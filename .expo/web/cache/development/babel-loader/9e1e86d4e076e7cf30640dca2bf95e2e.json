{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Bubble, GiftedChat } from \"react-native-gifted-chat\";\nimport { collection, getDocs } from \"@firebase/firestore\";\nimport { db } from \"./firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this);\n    _this.state = {\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var name = this.props.route.params.name;\n\n      var getMessages = function getMessages() {\n        var messagesCol, messageSnapshot, messageList;\n        return _regeneratorRuntime.async(function getMessages$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                messagesCol = collection(db, 'text', 'user');\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(getDocs(messagesCol));\n\n              case 3:\n                messageSnapshot = _context.sent;\n                messageList = messageSnapshot.docs.map(function (doc) {\n                  return doc.data;\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      this.setState({\n        messages: [{\n          _id: 1,\n          text: \"hello Learner, I am the message you see now! just keep coding\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://placeimg.com/140/140/any\"\n          }\n        }, {\n          _id: 2,\n          text: name + \" has entered the chat\",\n          createdAt: new Date(),\n          system: true\n        }]\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      });\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(props) {\n      return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n        wrapperStyle: {\n          right: {\n            backgroundColor: \"#0096FF\"\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var name = this.props.route.params.name;\n      var color = this.props.route.params.color;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      return _jsxs(View, {\n        style: {\n          backgroundColor: color,\n          flex: 1\n        },\n        children: [_jsx(GiftedChat, {\n          renderBubble: this.renderBubble.bind(this),\n          messages: this.state.messages,\n          onSend: function onSend(messages) {\n            return _this2.onSend(messages);\n          },\n          user: {\n            _id: 1\n          }\n        }), Platform.OS === \"android\" ? _jsx(KeyboardAvoidingView, {\n          behavior: \"height\"\n        }) : null]\n      });\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"sources":["C:/Users/baile/Documents/hello-world/components/Chat.js"],"names":["React","Bubble","GiftedChat","collection","getDocs","db","Chat","state","messages","name","props","route","params","getMessages","messagesCol","messageSnapshot","messageList","docs","map","doc","data","setState","_id","text","createdAt","Date","user","avatar","system","previousState","append","right","backgroundColor","color","navigation","setOptions","title","flex","renderBubble","bind","onSend","Platform","OS","Component","styles","StyleSheet","create","container"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, Platform, KeyboardAvoidingView } from \"react-native\";\r\nimport { Bubble, GiftedChat } from \"react-native-gifted-chat\";\r\nimport { collection, getDocs } from \"@firebase/firestore\";\r\nimport { db } from \"./firebase\";\r\n\r\nexport default class Chat extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { //  messages state\r\n      messages: [],\r\n    };\r\n  }\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n    let name = this.props.route.params.name; // name prop passed over from state from start.js\r\n    \r\n    const getMessages = async () => {\r\n     const messagesCol = collection(db, 'text', 'user');\r\n     const messageSnapshot = await getDocs(messagesCol);\r\n     const messageList = messageSnapshot.docs.map(doc => doc.data)\r\n    }\r\n    \r\n    this.setState({\r\n      messages: [ // messages object list\r\n        {\r\n          _id: 1,\r\n          text: \"hello Learner, I am the message you see now! just keep coding\",\r\n          createdAt: new Date(),\r\n          user: {\r\n            _id: 2,\r\n            name: \"React Native\",\r\n            avatar: \"https://placeimg.com/140/140/any\",\r\n          },\r\n        },\r\n        {\r\n          _id: 2,\r\n          text: `${name} has entered the chat`, // uses name prop to add the system message\r\n          createdAt: new Date(),\r\n          system: true,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  onSend(messages = []) {\r\n    this.setState((previousState) => ({\r\n      messages: GiftedChat.append(previousState.messages, messages), //appends messages objects\r\n    }));\r\n  }\r\n\r\n  renderBubble(props) { // changes the right spawn texts AKA YOU sending them\r\n    return (\r\n      <Bubble\r\n        {...props}\r\n        wrapperStyle={{\r\n          right: {\r\n            backgroundColor: \"#0096FF\",\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let name = this.props.route.params.name; // both color and name props\r\n    let color = this.props.route.params.color;\r\n\r\n    this.props.navigation.setOptions({ title: name });\r\n\r\n    return ( // start of DOM return statement\r\n      <View\r\n        style={{\r\n          backgroundColor: color,\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <GiftedChat\r\n          renderBubble={this.renderBubble.bind(this)}\r\n          messages={this.state.messages}\r\n          onSend={(messages) => this.onSend(messages)}\r\n          user={{ _id: 1 }}\r\n        />\r\n        {Platform.OS === \"android\" ? (\r\n          <KeyboardAvoidingView behavior=\"height\" />\r\n        ) : null}\r\n\r\n        {}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\ncontainer: {\r\n\r\n},\r\n\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}