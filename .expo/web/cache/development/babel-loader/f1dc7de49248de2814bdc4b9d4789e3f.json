{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Bubble, GiftedChat, SystemMessage, Day, InputToolbar } from \"react-native-gifted-chat\";\nimport * as Firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDNHFXzy8hjxO-RhLFw4GnvxA4Lo-8ocHM\",\n  authDomain: \"chatapp-634d7.firebaseapp.com\",\n  projectId: \"chatapp-634d7\",\n  storageBucket: \"chatapp-634d7.appspot.com\",\n  messagingSenderId: \"632232918859\",\n  appId: \"1:632232918859:web:535192920d141d09e172ce\"\n};\n\nvar Chat = function (_Component) {\n  _inherits(Chat, _Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this);\n\n    _this.onCollectionUpdate = function (QuerySnapshot) {\n      var messages = [];\n      QuerySnapshot.forEach(function (doc) {\n        var data = doc.data();\n        messages.push({\n          _id: data._id,\n          text: data.text,\n          createdAt: data.createdAt.toDate(),\n          user: {\n            _id: data.user._id,\n            name: data.user.name,\n            avatar: data.user.avatar\n          }\n        });\n      });\n\n      _this.setState({\n        messages: messages\n      });\n    };\n\n    _this.getMessages = function _callee() {\n      var messages;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              messages = \"\";\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"messages\"));\n\n            case 4:\n              _context.t0 = _context.sent;\n\n              if (_context.t0) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.t0 = [];\n\n            case 7:\n              messages = _context.t0;\n\n              _this.setState({\n                messages: JSON.parse(messages)\n              });\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t1 = _context[\"catch\"](1);\n              console.log(_context.t1.message);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 11]], Promise);\n    };\n\n    _this.saveMessage = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"messages\", JSON.stringify(_this.state.messages)));\n\n            case 3:\n              _context2.next = 8;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0.message);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    };\n\n    _this.deleteMessages = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"messages\"));\n\n            case 3:\n              _this.setState({\n                messages: []\n              });\n\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0.message);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    _this.state = {\n      messages: [],\n      uid: 0,\n      user: {\n        _id: \"\",\n        name: \"\",\n        avatar: \"\"\n      },\n      isConnected: false\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    _this.referenceChatMessages = firebase.firestore().collection(\"messages\");\n    _this.refMsgsUser = null;\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var name = this.props.route.params.name;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      NetInfo.fetch().then(function (connection) {\n        if (connection.isConnected) {\n          _this2.setState({\n            isConnected: true\n          });\n\n          console.log(\"online\");\n          _this2.unsubscribe = _this2.referenceChatMessages.orderBy(\"createdAt\", \"desc\").onSnapshot(_this2.onCollectionUpdate);\n          _this2.authUnsubscribe = firebase.auth().onAuthStateChanged(function _callee4(user) {\n            return _regeneratorRuntime.async(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    if (user) {\n                      _context4.next = 4;\n                      break;\n                    }\n\n                    _context4.next = 3;\n                    return _regeneratorRuntime.awrap(firebase.auth().signInAnonymously());\n\n                  case 3:\n                    return _context4.abrupt(\"return\", _context4.sent);\n\n                  case 4:\n                    _this2.setState({\n                      uid: user.uid,\n                      messages: [],\n                      user: {\n                        _id: user.uid,\n                        name: name,\n                        avatar: \"https://placeimg.com/140/140/any\"\n                      }\n                    });\n\n                    _this2.refMsgsUser = firebase.firestore().collection(\"messages\").where(\"uid\", \"==\", _this2.state.uid);\n\n                  case 6:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          });\n\n          _this2.saveMessages();\n        } else {\n          _this2.setState({\n            isConnected: false\n          });\n\n          console.log(\"offline\");\n\n          _this2.getMessages();\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.authUnsubscribe();\n      this.unsubscribe();\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage() {\n      var message = this.state.messages[0];\n      this.referenceChatMessages.add({\n        _id: message._id,\n        text: message.text || \"\",\n        createdAt: message.createdAt,\n        user: this.state.user\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var _this3 = this;\n\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      }, function () {\n        _this3.saveMessage();\n\n        _this3.addMessage();\n      });\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(props) {\n      return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n        wrapperStyle: {\n          right: {\n            backgroundColor: \"#dbb35a\"\n          },\n          left: {\n            backgroundColor: \"white\"\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"renderSystemMessage\",\n    value: function renderSystemMessage(props) {\n      return _jsx(SystemMessage, _objectSpread(_objectSpread({}, props), {}, {\n        textStyle: {\n          color: \"#736357\"\n        }\n      }));\n    }\n  }, {\n    key: \"renderDay\",\n    value: function renderDay(props) {\n      return _jsx(Day, _objectSpread(_objectSpread({}, props), {}, {\n        textStyle: {\n          color: \"#fff\",\n          backgroundColor: \"#9e938c\",\n          borderRadius: 15,\n          padding: 10\n        }\n      }));\n    }\n  }, {\n    key: \"renderInputToolbar\",\n    value: function renderInputToolbar(props) {\n      if (this.state.isConnected == false) {} else {\n        return _jsx(InputToolbar, _objectSpread({}, props));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var name = this.props.route.params.name;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      var bgColor = this.props.route.params.bgColor;\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: {\n            backgroundColor: bgColor,\n            width: \"100%\",\n            height: \"100%\"\n          },\n          children: [_jsx(GiftedChat, {\n            style: styles.giftedChat,\n            renderBubble: this.renderBubble.bind(this),\n            renderSystemMessage: this.renderSystemMessage,\n            renderDay: this.renderDay,\n            renderInputToolbar: this.renderInputToolbar.bind(this),\n            messages: this.state.messages,\n            onSend: function onSend(messages) {\n              return _this4.onSend(messages);\n            },\n            user: {\n              _id: this.state.user._id,\n              name: this.state.name,\n              avatar: this.state.user.avatar\n            }\n          }), Platform.OS === \"android\" ? _jsx(KeyboardAvoidingView, {\n            behavior: \"height\"\n          }) : null]\n        })\n      });\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport { Chat as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  giftedChat: {\n    color: \"#000\"\n  }\n});","map":{"version":3,"sources":["C:/Users/baile/Documents/hello-world/components/Chat.js"],"names":["React","Component","Bubble","GiftedChat","SystemMessage","Day","InputToolbar","Firebase","AsyncStorage","NetInfo","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Chat","onCollectionUpdate","QuerySnapshot","messages","forEach","doc","data","push","_id","text","createdAt","toDate","user","name","avatar","setState","getMessages","getItem","JSON","parse","console","log","message","saveMessage","setItem","stringify","state","deleteMessages","removeItem","uid","isConnected","firebase","apps","length","initializeApp","referenceChatMessages","firestore","collection","refMsgsUser","props","route","params","navigation","setOptions","title","fetch","then","connection","unsubscribe","orderBy","onSnapshot","authUnsubscribe","auth","onAuthStateChanged","signInAnonymously","where","saveMessages","add","previousState","append","addMessage","right","backgroundColor","left","color","borderRadius","padding","bgColor","styles","container","width","height","giftedChat","renderBubble","bind","renderSystemMessage","renderDay","renderInputToolbar","onSend","Platform","OS","StyleSheet","create","flex","flexDirection","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, StyleSheet, Platform, KeyboardAvoidingView } from \"react-native\";\r\nimport {\r\n  Bubble,\r\n  GiftedChat,\r\n  SystemMessage,\r\n  Day,\r\n  InputToolbar,\r\n} from \"react-native-gifted-chat\";\r\n\r\nimport * as Firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\n// import AsynceStorage\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n// import NetInfo\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\n\r\n// web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDNHFXzy8hjxO-RhLFw4GnvxA4Lo-8ocHM\",\r\n  authDomain: \"chatapp-634d7.firebaseapp.com\",\r\n  projectId: \"chatapp-634d7\",\r\n  storageBucket: \"chatapp-634d7.appspot.com\",\r\n  messagingSenderId: \"632232918859\",\r\n  appId: \"1:632232918859:web:535192920d141d09e172ce\",\r\n};\r\n\r\nexport default class Chat extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      messages: [],\r\n      uid: 0,\r\n      user: {\r\n        _id: \"\",\r\n        name: \"\",\r\n        avatar: \"\",\r\n      },\r\n      isConnected: false,\r\n    };\r\n\r\n    //initializing firebase\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(firebaseConfig);\r\n    }\r\n    // reference to the Firestore messages collection\r\n    this.referenceChatMessages = firebase.firestore().collection(\"messages\");\r\n    this.refMsgsUser = null;\r\n  }\r\n\r\n  onCollectionUpdate = (QuerySnapshot) => {\r\n    const messages = [];\r\n    // go through each document\r\n    QuerySnapshot.forEach((doc) => {\r\n      // get the queryDocumentSnapshot's data\r\n      let data = doc.data();\r\n      messages.push({\r\n        _id: data._id,\r\n        text: data.text,\r\n        createdAt: data.createdAt.toDate(),\r\n        user: {\r\n          _id: data.user._id,\r\n          name: data.user.name,\r\n          avatar: data.user.avatar,\r\n        },\r\n      });\r\n    });\r\n    this.setState({\r\n      messages: messages,\r\n    });\r\n  };\r\n\r\n  // get messages from AsyncStorage\r\n  getMessages = async () => {\r\n    let messages = \"\";\r\n    try {\r\n      messages = (await AsyncStorage.getItem(\"messages\")) || [];\r\n      this.setState({\r\n        messages: JSON.parse(messages),\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  // save messages on the asyncStorage\r\n  saveMessage = async () => {\r\n    try {\r\n      await AsyncStorage.setItem(\r\n        \"messages\",\r\n        JSON.stringify(this.state.messages)\r\n      );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  // delete message from asyncStorage\r\n  deleteMessages = async () => {\r\n    try {\r\n      await AsyncStorage.removeItem(\"messages\");\r\n      this.setState({\r\n        messages: [],\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let { name } = this.props.route.params;\r\n    this.props.navigation.setOptions({ title: name });\r\n\r\n    // check the user connection status, online?\r\n    NetInfo.fetch().then((connection) => {\r\n      if (connection.isConnected) {\r\n        this.setState({ isConnected: true });\r\n        console.log(\"online\");\r\n        // listens for updates in the collection\r\n        this.unsubscribe = this.referenceChatMessages\r\n          .orderBy(\"createdAt\", \"desc\")\r\n          .onSnapshot(this.onCollectionUpdate);\r\n\r\n        // listen to authentication events\r\n        this.authUnsubscribe = firebase\r\n          .auth()\r\n          .onAuthStateChanged(async (user) => {\r\n            if (!user) {\r\n              return await firebase.auth().signInAnonymously();\r\n            }\r\n\r\n            // update user state with currently active data\r\n            this.setState({\r\n              uid: user.uid,\r\n              messages: [],\r\n              user: {\r\n                _id: user.uid,\r\n                name: name,\r\n                avatar: \"https://placeimg.com/140/140/any\",\r\n              },\r\n            });\r\n\r\n            //referencing messages of current user\r\n            this.refMsgsUser = firebase\r\n              .firestore()\r\n              .collection(\"messages\")\r\n              .where(\"uid\", \"==\", this.state.uid);\r\n          });\r\n        // save messages locally to AsyncStorage\r\n        this.saveMessages();\r\n      } else {\r\n        // the user is offline\r\n        this.setState({ isConnected: false });\r\n        console.log(\"offline\");\r\n        this.getMessages();\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // stop listening to authentication\r\n    this.authUnsubscribe();\r\n    // stop listening for changes\r\n    this.unsubscribe();\r\n  }\r\n\r\n  addMessage() {\r\n    const message = this.state.messages[0];\r\n    // add a new message to the collection\r\n    this.referenceChatMessages.add({\r\n      _id: message._id,\r\n      text: message.text || \"\",\r\n      createdAt: message.createdAt,\r\n      user: this.state.user,\r\n    });\r\n  }\r\n\r\n  onSend(messages = []) {\r\n    this.setState(\r\n      (previousState) => ({\r\n        messages: GiftedChat.append(previousState.messages, messages),\r\n      }),\r\n      () => {\r\n        this.saveMessage();\r\n        this.addMessage();\r\n      }\r\n    );\r\n  }\r\n\r\n  renderBubble(props) {\r\n    return (\r\n      <Bubble\r\n        {...props}\r\n        wrapperStyle={{\r\n          right: {\r\n            backgroundColor: \"#dbb35a\",\r\n          },\r\n          left: {\r\n            backgroundColor: \"white\",\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSystemMessage(props) {\r\n    return <SystemMessage {...props} textStyle={{ color: \"#736357\" }} />;\r\n  }\r\n\r\n  renderDay(props) {\r\n    return (\r\n      <Day\r\n        {...props}\r\n        textStyle={{\r\n          color: \"#fff\",\r\n          backgroundColor: \"#9e938c\",\r\n          borderRadius: 15,\r\n          padding: 10,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInputToolbar(props) {\r\n    if (this.state.isConnected == false) {\r\n    } else {\r\n      return <InputToolbar {...props} />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let name = this.props.route.params.name;\r\n    this.props.navigation.setOptions({ title: name });\r\n\r\n    let bgColor = this.props.route.params.bgColor;\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <View\r\n          style={{\r\n            backgroundColor: bgColor,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <GiftedChat\r\n            style={styles.giftedChat}\r\n            renderBubble={this.renderBubble.bind(this)}\r\n            renderSystemMessage={this.renderSystemMessage}\r\n            renderDay={this.renderDay}\r\n            renderInputToolbar={this.renderInputToolbar.bind(this)}\r\n            messages={this.state.messages}\r\n            onSend={(messages) => this.onSend(messages)}\r\n            user={{\r\n              _id: this.state.user._id,\r\n              name: this.state.name,\r\n              avatar: this.state.user.avatar,\r\n            }}\r\n          />\r\n          {Platform.OS === \"android\" ? (\r\n            <KeyboardAvoidingView behavior=\"height\" />\r\n          ) : null}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  giftedChat: {\r\n    color: \"#000\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}