{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport react, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { auth } from \"./firebase\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useNavigation } from '@react-navigation/native';\nimport { signOut } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(screenName) {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSignedIn = _useState2[0],\n      setIsSignedIn = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var registerUser = function registerUser() {\n    createUserWithEmailAndPassword(authentication, email, password).then(function (res) {\n      console.log(res);\n      setIsSignedIn(true);\n      navigation.navigate(screenName = \"Set Name\");\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var signInUser = function signInUser() {\n    signInWithEmailAndPassword(authentication, email, password).then(function (res) {\n      console.log(res);\n      setIsSignedIn(true);\n      navigation.navigate(screenName = \"Set Name\");\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var signUserOut = function signUserOut() {\n    signOut(authentication).then(function (res) {\n      console.log(res);\n      setIsSignedIn(false);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      value: password,\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), isSignedIn === true ? _jsx(Button, {\n      title: \"Sign Out\",\n      onPress: signUserOut\n    }) : _jsx(Button, {\n      title: \"Sign In\",\n      onPress: signInUser\n    }), _jsx(Button, {\n      title: \"Register\",\n      onPress: registerUser\n    })]\n  });\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/baile/Documents/hello-world/components/Login.js"],"names":["react","useState","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","useNavigation","signOut","Login","screenName","navigation","isSignedIn","setIsSignedIn","email","setEmail","password","setPassword","registerUser","authentication","then","res","console","log","navigate","catch","err","signInUser","signUserOut","text"],"mappings":"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","sourcesContent":["import react, {useState} from \"react\";\r\nimport { View, TextInput, StyleSheet, Text, Button } from \"react-native\";\r\nimport { auth} from \"./firebase\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { signOut } from \"firebase/auth\";\r\n\r\nconst Login  = (screenName) => {\r\n\r\nconst navigation = useNavigation();\r\n   \r\nconst [isSignedIn, setIsSignedIn] = useState(false);\r\n   // text input states\r\n\r\n   const [email,setEmail] = useState('');\r\n   const [password,setPassword] = useState('');\r\n  \r\n   const registerUser = () => {\r\n    createUserWithEmailAndPassword(authentication, email, password )\r\n    .then((res) => {\r\n    console.log(res);\r\n    setIsSignedIn(true)\r\n    navigation.navigate((screenName = \"Set Name\"));\r\n    })\r\n    .catch((err) => {\r\n    console.log(err);\r\n    })\r\n   }\r\n\r\n   const signInUser = () => {\r\n    signInWithEmailAndPassword( authentication, email, password )\r\n    .then((res) => {\r\n    console.log(res)\r\n    setIsSignedIn(true)\r\n    navigation.navigate((screenName = \"Set Name\"));\r\n    })\r\n    .catch((err) => {\r\n    console.log(err);\r\n    })\r\n   }\r\n\r\n   const signUserOut = () => {\r\n     signOut(authentication)\r\n       .then((res) => {\r\n         console.log(res);\r\n         setIsSignedIn(false);\r\n       })\r\n       .catch((err) => {\r\n         console.log(err);\r\n       });\r\n   };\r\n\r\n    \r\n    return (\r\n      <View>\r\n        <TextInput\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          secureTextEntry={true}\r\n          onChangeText={(text) => setPassword(text)}\r\n        />\r\n        {isSignedIn === true?\r\n        <Button title=\"Sign Out\" onPress={signUserOut} />\r\n        :\r\n        <Button title=\"Sign In\" onPress={signInUser} />\r\n        }\r\n        <Button title=\"Register\" onPress={registerUser} />\r\n      </View>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\n"]},"metadata":{},"sourceType":"module"}