{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HelloWorld = function (_React$Component) {\n  _inherits(HelloWorld, _React$Component);\n\n  var _super = _createSuper(HelloWorld);\n\n  function HelloWorld(props) {\n    var _this;\n\n    _classCallCheck(this, HelloWorld);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      text: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(HelloWorld, [{\n    key: \"alertMyText\",\n    value: function alertMyText() {\n      var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      Alert.alert(input.text);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(TextInput, {\n          style: styles.container,\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              text: text\n            });\n          },\n          value: this.state.text,\n          placeholder: \"Type here...\"\n        }), _jsx(ScrollView, {\n          children: _jsx(Text, {\n            style: {\n              fontSize: 110\n            },\n            children: \"This text is so big! And so long! You have to scroll!\"\n          })\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            _this2.alertMyText({\n              text: _this2.state.text\n            });\n          },\n          title: \"press Me\"\n        })]\n      });\n    }\n  }]);\n\n  return HelloWorld;\n}(React.Component);\n\nexport { HelloWorld as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  TextInput: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/baile/hello-world/App.js"],"names":["React","Component","HelloWorld","props","state","text","input","Alert","alert","styles","container","setState","fontSize","alertMyText","StyleSheet","create","flex","justifyContent","TextInput","height","borderColor","borderWidth"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;IAIqBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAFiB;AAGlB;;;;WAED,uBAAwB;AAAA,UAAZC,KAAY,uEAAJ,EAAI;AACtBC,MAAAA,KAAK,CAACC,KAAN,CAAYF,KAAK,CAACD,IAAlB;AACD;;;WAED,kBAAS;AAAA;;AACP,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA,mBACE,KAAC,SAAD;AACE,UAAA,KAAK,EAAED,MAAM,CAACC,SADhB;AAEE,UAAA,YAAY,EAAE,sBAACL,IAAD;AAAA,mBAAU,MAAI,CAACM,QAAL,CAAc;AAAEN,cAAAA,IAAI,EAAJA;AAAF,aAAd,CAAV;AAAA,WAFhB;AAGE,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,IAHpB;AAIE,UAAA,WAAW,EAAC;AAJd,UADF,EAOE,KAAC,UAAD;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEO,cAAAA,QAAQ,EAAE;AAAZ,aAAb;AAAA;AAAA;AADF,UAPF,EAYE,KAAC,MAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACb,YAAA,MAAI,CAACC,WAAL,CAAiB;AAAER,cAAAA,IAAI,EAAE,MAAI,CAACD,KAAL,CAAWC;AAAnB,aAAjB;AACD,WAHH;AAIE,UAAA,KAAK,EAAC;AAJR,UAZF;AAAA,QADF;AAqBD;;;;EAhCqCL,KAAK,CAACC,S;;SAAzBC,U;AAmCrB,IAAMO,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AACjCL,EAAAA,SAAS,EAAE;AACXM,IAAAA,IAAI,EAAE,CADK;AAEXC,IAAAA,cAAc,EAAE;AAFL,GADsB;AAMjCC,EAAAA,SAAS,EAAE;AACXC,IAAAA,MAAM,EAAE,EADG;AAEXC,IAAAA,WAAW,EAAE,MAFF;AAGXC,IAAAA,WAAW,EAAE;AAHF;AANsB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, View, Text, TextInput, Button, Alert } from \"react-native\";\n\n\nexport default class HelloWorld extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { text: \"\" };\n  }\n  \n  alertMyText(input = []) {\n    Alert.alert(input.text);\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <TextInput\n          style={styles.container}\n          onChangeText={(text) => this.setState({ text })}\n          value={this.state.text}\n          placeholder=\"Type here...\"\n        />\n        <ScrollView>\n          <Text style={{ fontSize: 110 }}>\n            This text is so big! And so long! You have to scroll!\n          </Text>\n        </ScrollView>\n        <Button\n          onPress={() => {\n            this.alertMyText({ text: this.state.text });\n          }}\n          title=\"press Me\"\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\ncontainer: {\nflex: 1,\njustifyContent: 'center'\n},\n\nTextInput: {\nheight: 40,\nborderColor: 'gray',\nborderWidth: 1\n},\n\n\n})"]},"metadata":{},"sourceType":"module"}