{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Bubble, GiftedChat } from \"react-native-gifted-chat\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar firebase = require(\"firebase\");\n\nrequire(\"firebase/firestore\");\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this);\n    var firebaseConfig = {\n      apiKey: \"AIzaSyBtt9vShgdL-46-bVaMjuUYgHY7WKQVuWs\",\n      authDomain: \"chat-ab583.firebaseapp.com\",\n      projectId: \"chat-ab583\",\n      storageBucket: \"chat-ab583.appspot.com\",\n      messagingSenderId: \"395742845331\"\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    _this.state = {\n      messages: [],\n      uid: uid\n    };\n    _this.referenceChatMessages = firebase.firestore().collection(\"messages\");\n\n    if (_this.referenceChatMessages === null / undefined) {\n      Alert.alert(\"The message has failed to send!\");\n    }\n\n    _this.unsubscribe = _this.referenceChatMessages.onSnapshot(_this.onCollectionUpdate);\n\n    onCollectionUpdate = function onCollectionUpdate(querySnapshot) {\n      var messages = [];\n      querySnapshot.forEach(function (doc) {\n        var data = doc.data();\n        messages.push({\n          _id: data._id,\n          text: data.text,\n          createdAt: data.createdAt.toDate(),\n          user: data.user\n        });\n      });\n    };\n\n    addMessage = function addMessage() {\n      _this.referenceChatMessages.add({\n        text: 'Teslist'\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var name = this.props.route.params.name;\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      });\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(props) {\n      return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n        wrapperStyle: {\n          right: {\n            backgroundColor: \"#0096FF\"\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var name = this.props.route.params.name;\n      var color = this.props.route.params.color;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      return _jsxs(View, {\n        style: {\n          backgroundColor: color,\n          flex: 1\n        },\n        children: [_jsx(GiftedChat, {\n          renderBubble: this.renderBubble.bind(this),\n          messages: this.state.messages,\n          onSend: function onSend(messages) {\n            return _this2.onSend(messages);\n          },\n          user: {\n            _id: 1\n          }\n        }), Platform.OS === \"android\" ? _jsx(KeyboardAvoidingView, {\n          behavior: \"height\"\n        }) : null]\n      });\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"sources":["C:/Users/baile/Documents/hello-world/components/Chat.js"],"names":["React","Bubble","GiftedChat","firebase","require","Chat","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","apps","length","initializeApp","state","messages","uid","referenceChatMessages","firestore","collection","undefined","Alert","alert","unsubscribe","onSnapshot","onCollectionUpdate","querySnapshot","forEach","doc","data","push","_id","text","createdAt","toDate","user","addMessage","add","name","props","route","params","setState","previousState","append","right","backgroundColor","color","navigation","setOptions","title","flex","renderBubble","bind","onSend","Platform","OS","Component","styles","StyleSheet","create","container"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, Platform, KeyboardAvoidingView } from \"react-native\";\r\nimport { Bubble, GiftedChat } from \"react-native-gifted-chat\";\r\nimport { Alert } from \"react-native-web\";\r\n\r\nconst firebase = require(\"firebase\");\r\nrequire(\"firebase/firestore\");\r\n\r\nexport default class Chat extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    const firebaseConfig = {\r\n      apiKey: \"AIzaSyBtt9vShgdL-46-bVaMjuUYgHY7WKQVuWs\",\r\n      authDomain: \"chat-ab583.firebaseapp.com\",\r\n      projectId: \"chat-ab583\",\r\n      storageBucket: \"chat-ab583.appspot.com\",\r\n      messagingSenderId: \"395742845331\",\r\n    };\r\n\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n    this.state = {\r\n      //  messages state\r\n      messages: [],\r\n      uid\r\n    };\r\n  \r\n   this.referenceChatMessages = firebase.firestore().collection(\"messages\");\r\n   if (this.referenceChatMessages === null/undefined) {\r\n   Alert.alert(\"The message has failed to send!\")\r\n   }\r\n   this.unsubscribe = this.referenceChatMessages.onSnapshot(\r\n     this.onCollectionUpdate\r\n   );\r\n\r\n   onCollectionUpdate = (querySnapshot) => {\r\n   const messages = [];\r\n   // go through each document\r\n   querySnapshot.forEach((doc) => {\r\n     // get the QueryDocumentSnapshot's data\r\n     let data = doc.data();\r\n     messages.push({\r\n       _id: data._id,\r\n       text: data.text,\r\n       createdAt: data.createdAt.toDate(),\r\n       user: data.user,\r\n     });\r\n   });\r\n  }\r\n\r\n  addMessage = () => {\r\n  this.referenceChatMessages.add({\r\n  text: 'Teslist',\r\n  })\r\n  }\r\n  \r\n}\r\n  \r\n\r\n  componentDidMount() {\r\n    let name = this.props.route.params.name; // name prop passed over from state from start.js\r\n    \r\n  }\r\n\r\n  onSend(messages = []) {\r\n    this.setState((previousState) => ({\r\n      messages: GiftedChat.append(previousState.messages, messages), //appends messages objects\r\n    }));\r\n  }\r\n\r\n  renderBubble(props) {\r\n    // changes the right spawn texts AKA YOU sending them\r\n    return (\r\n      <Bubble\r\n        {...props}\r\n        wrapperStyle={{\r\n          right: {\r\n            backgroundColor: \"#0096FF\",\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let name = this.props.route.params.name; // both color and name props\r\n    let color = this.props.route.params.color;\r\n\r\n    this.props.navigation.setOptions({ title: name });\r\n\r\n    return (\r\n      // start of DOM return statement\r\n      <View\r\n        style={{\r\n          backgroundColor: color,\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <GiftedChat\r\n          renderBubble={this.renderBubble.bind(this)}\r\n          messages={this.state.messages}\r\n          onSend={(messages) => this.onSend(messages)}\r\n          user={{ _id: 1 }}\r\n        />\r\n        {Platform.OS === \"android\" ? (\r\n          <KeyboardAvoidingView behavior=\"height\" />\r\n        ) : null}\r\n\r\n        {}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\ncontainer: {\r\n\r\n},\r\n\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}