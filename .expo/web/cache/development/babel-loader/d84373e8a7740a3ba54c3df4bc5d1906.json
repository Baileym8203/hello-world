{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { signOut } from \"firebase/auth\";\nimport { authentication } from \"./firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Start = function (_React$Component) {\n  _inherits(Start, _React$Component);\n\n  var _super = _createSuper(Start);\n\n  function Start() {\n    var _this;\n\n    _classCallCheck(this, Start);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: \"\",\n      color: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Start, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _useState = useState(true),\n          _useState2 = _slicedToArray(_useState, 2),\n          isSignedIn = _useState2[0],\n          setIsSignedIn = _useState2[1];\n\n      var signUserOut = function signUserOut() {\n        signOut(authentication).then(function (res) {\n          setIsSignedIn(false);\n        }).catch(function (err) {\n          console.log(err);\n        });\n      };\n\n      return _jsx(ImageBackground, {\n        source: require(\"../img/Background.png\"),\n        resizeMode: \"cover\",\n        style: styles.image,\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Button, {\n            title: \"Sign Out\",\n            onPress: signUserOut\n          }), _jsx(Text, {\n            style: styles.heading,\n            children: \"TimeSlip\"\n          }), _jsxs(View, {\n            style: styles.background,\n            children: [_jsx(TouchableOpacity, {\n              accessible: true,\n              accessibilityLabel: \"Type in your name\",\n              accessibilityHint: \"Let's you show your user name on the next page\"\n            }), _jsx(TextInput, {\n              style: styles.name,\n              placeholder: \"Your Name..\",\n              value: this.state.name,\n              onChangeText: function onChangeText(name) {\n                return _this2.setState({\n                  name: name\n                });\n              }\n            }), _jsx(Text, {\n              children: \"Choose Background Color\"\n            }), _jsxs(View, {\n              style: styles.roundButtonView,\n              children: [_jsx(TouchableOpacity, {\n                accessible: true,\n                accessibilityLabel: \"background color black\",\n                accessibilityHint: \"let's you change your background color\\r on the chat page to black\",\n                onPress: this._onPress,\n                accessibilityRole: \"button\",\n                children: _jsx(View, {\n                  style: styles.roundButtonBlack,\n                  children: _jsx(Text, {\n                    style: {\n                      backgroundColor: \"#090C08\"\n                    },\n                    onPress: function onPress() {\n                      return _this2.setState({\n                        color: \"#090C08\"\n                      });\n                    }\n                  })\n                })\n              }), _jsx(TouchableOpacity, {\n                accessible: true,\n                accessibilityLabel: \"background color purple\",\n                accessibilityHint: \"let's you change your background color\\r on the chat page to purple\",\n                onPress: this._onPress,\n                accessibilityRole: \"button\",\n                children: _jsx(View, {\n                  style: styles.roundButtonPurple,\n                  children: _jsx(Text, {\n                    style: {\n                      backgroundColor: \"#474056\"\n                    },\n                    onPress: function onPress() {\n                      return _this2.setState({\n                        color: \"#474056\"\n                      });\n                    }\n                  })\n                })\n              }), _jsx(TouchableOpacity, {\n                accessible: true,\n                accessibilityLabel: \"background color blue\",\n                accessibilityHint: \"let's you change your background color\\r on the chat page to blue\",\n                onPress: this._onPress,\n                accessibilityRole: \"button\",\n                children: _jsx(View, {\n                  style: styles.roundButtonBlue,\n                  children: _jsx(Text, {\n                    style: {\n                      backgroundColor: \"#8A95A5\"\n                    },\n                    onPress: function onPress() {\n                      return _this2.setState({\n                        color: \"#8A95A5\"\n                      });\n                    }\n                  })\n                })\n              }), _jsx(TouchableOpacity, {\n                accessible: true,\n                accessibilityLabel: \"background color green\",\n                accessibilityHint: \"let's you change your background color\\r on the chat page to green\",\n                onPress: this._onPress,\n                accessibilityRole: \"button\",\n                children: _jsx(View, {\n                  style: styles.roundButtonGreen,\n                  children: _jsx(Text, {\n                    style: {\n                      backgroundColor: \"#B9C6AE\"\n                    },\n                    onPress: function onPress() {\n                      return _this2.setState({\n                        color: \"#B9C6AE\"\n                      });\n                    }\n                  })\n                })\n              })]\n            }), _jsx(TouchableOpacity, {\n              accessible: true,\n              accessibilityLabel: \"Enter Chat\",\n              accessibilityHint: \"sends you to the chat screen\",\n              onPress: this._onPress,\n              accessibilityRole: \"button\",\n              children: _jsx(Button, {\n                style: styles.button,\n                color: \"#757\",\n                title: \"Start Chatting\",\n                onPress: function onPress() {\n                  return _this2.props.navigation.navigate(\"Chat\", {\n                    name: _this2.state.name,\n                    color: _this2.state.color\n                  });\n                }\n              })\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Start;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 70,\n    marginBottom: 20,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  image: {\n    flex: 1,\n    opacity: 100\n  },\n  button: {\n    fontSize: 16,\n    fontWeight: \"600\",\n    color: \"#ffffff\"\n  },\n  roundButtonBlack: {\n    borderWidth: 10,\n    borderRadius: 25,\n    width: 35,\n    height: 35,\n    borderColor: \"#090C08\"\n  },\n  roundButtonPurple: {\n    borderColor: \"#474056\",\n    borderWidth: 10,\n    borderRadius: 25,\n    width: 35,\n    height: 35\n  },\n  roundButtonBlue: {\n    borderColor: \"#8A95A5\",\n    borderWidth: 10,\n    borderRadius: 25,\n    width: 35,\n    height: 35\n  },\n  roundButtonGreen: {\n    borderColor: \"#B9C6AE\",\n    borderWidth: 10,\n    borderRadius: 25,\n    width: 35,\n    height: 35\n  },\n  roundButtonView: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    marginTop: 20,\n    marginRight: 125\n  },\n  heading: {\n    flex: 1,\n    fontSize: 45,\n    fontWeight: \"bold\",\n    color: \"#ffffff\"\n  },\n  name: {\n    fontSize: 16,\n    fontWeight: \"300\",\n    color: \"#757083\",\n    opacity: 50,\n    marginBottom: 10,\n    borderColor: \"#757083\",\n    borderWidth: 2,\n    borderStyle: \"solid\",\n    padding: 7,\n    paddingLeft: 10,\n    width: 315,\n    height: 65,\n    marginBottom: 20\n  },\n  background: {\n    backgroundColor: \"#ffffff\",\n    paddingTop: 15,\n    paddingBottom: 15,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginLeft: 30,\n    marginRight: 30\n  }\n});\nexport default Start;","map":{"version":3,"sources":["C:/Users/baile/Documents/hello-world/components/Start.js"],"names":["React","TouchableOpacity","signOut","authentication","Start","state","name","color","useState","isSignedIn","setIsSignedIn","signUserOut","then","res","catch","err","console","log","require","styles","image","container","heading","background","setState","roundButtonView","_onPress","roundButtonBlack","backgroundColor","roundButtonPurple","roundButtonBlue","roundButtonGreen","button","props","navigation","navigate","Component","StyleSheet","create","marginTop","marginBottom","flex","justifyContent","alignItems","opacity","fontSize","fontWeight","borderWidth","borderRadius","width","height","borderColor","display","flexDirection","marginRight","borderStyle","padding","paddingLeft","paddingTop","paddingBottom","paddingRight","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, Text, Button, TextInput, StyleSheet, ImageBackground} from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { signOut } from \"firebase/auth\";\r\nimport { authentication } from \"./firebase\";\r\n\r\nclass Start extends React.Component {\r\n  state = {\r\nname: \"\",\r\ncolor: \"\"\r\n  }\r\n\r\n    render() {\r\n      const [isSignedIn, setIsSignedIn] = useState(true);\r\n      \r\n      const signUserOut = () => {\r\n      signOut(authentication)\r\n      .then((res) => {\r\n      setIsSignedIn(false)\r\n      })\r\n      .catch((err) => {\r\n      console.log(err)\r\n      })\r\n      }\r\n    \r\n      return (\r\n      <ImageBackground\r\n        source={require(\"../img/Background.png\")}\r\n        resizeMode=\"cover\"\r\n        style={styles.image}\r\n      >\r\n        <View style={styles.container}>\r\n          <Button title=\"Sign Out\" onPress={signUserOut} />\r\n          <Text style={styles.heading}>TimeSlip</Text>\r\n          <View style={styles.background}>\r\n            \r\n            <TouchableOpacity\r\n                accessible={true}\r\n                accessibilityLabel=\"Type in your name\"\r\n                accessibilityHint=\"Let's you show your user name on the next page\"\r\n              ></TouchableOpacity>\r\n            \r\n            <TextInput\r\n              style={styles.name}\r\n              placeholder=\"Your Name..\"\r\n              value={this.state.name}\r\n              onChangeText={(name) => this.setState({ name })}\r\n            />\r\n\r\n            <Text>Choose Background Color</Text>\r\n\r\n            <View style={styles.roundButtonView}>\r\n              <TouchableOpacity\r\n                accessible={true}\r\n                accessibilityLabel=\"background color black\"\r\n                accessibilityHint=\"let's you change your background color\r\n           on the chat page to black\"\r\n                onPress={this._onPress}\r\n                accessibilityRole=\"button\"\r\n              >\r\n                <View // black color picker\r\n                  style={styles.roundButtonBlack}\r\n                >\r\n                  <Text\r\n                    style={{ backgroundColor: \"#090C08\" }}\r\n                    onPress={() =>\r\n                      this.setState({\r\n                        color: \"#090C08\", //changes state color:\r\n                      })\r\n                    }\r\n                  ></Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                accessible={true}\r\n                accessibilityLabel=\"background color purple\"\r\n                accessibilityHint=\"let's you change your background color\r\n           on the chat page to purple\"\r\n                onPress={this._onPress}\r\n                accessibilityRole=\"button\"\r\n              >\r\n                <View //purple color picker\r\n                  style={styles.roundButtonPurple}\r\n                >\r\n                  <Text\r\n                    style={{ backgroundColor: \"#474056\" }}\r\n                    onPress={() =>\r\n                      this.setState({\r\n                        color: \"#474056\", //changes state color:\r\n                      })\r\n                    }\r\n                  ></Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                accessible={true}\r\n                accessibilityLabel=\"background color blue\"\r\n                accessibilityHint=\"let's you change your background color\r\n           on the chat page to blue\"\r\n                onPress={this._onPress}\r\n                accessibilityRole=\"button\"\r\n              >\r\n                <View //blue color picker\r\n                  style={styles.roundButtonBlue}\r\n                >\r\n                  <Text\r\n                    style={{ backgroundColor: \"#8A95A5\" }}\r\n                    onPress={() =>\r\n                      this.setState({\r\n                        color: \"#8A95A5\", //changes state color:\r\n                      })\r\n                    }\r\n                  ></Text>\r\n                </View>\r\n              \r\n              </TouchableOpacity>\r\n\r\n             <TouchableOpacity\r\n                accessible={true}\r\n                accessibilityLabel=\"background color green\"\r\n                accessibilityHint=\"let's you change your background color\r\n           on the chat page to green\"\r\n                onPress={this._onPress}\r\n                accessibilityRole=\"button\"\r\n              >\r\n\r\n              <View //green color picker\r\n                style={styles.roundButtonGreen}\r\n              >\r\n                <Text\r\n                  style={{ backgroundColor: \"#B9C6AE\" }}\r\n                  onPress={() =>\r\n                    this.setState({\r\n                      color: \"#B9C6AE\", //changes state color:\r\n                    })\r\n                  }\r\n                ></Text>\r\n              </View>\r\n\r\n             </TouchableOpacity>\r\n\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n                accessible={true}\r\n                accessibilityLabel=\"Enter Chat\"\r\n                accessibilityHint=\"sends you to the chat screen\"\r\n                onPress={this._onPress}\r\n                accessibilityRole=\"button\"\r\n              >\r\n            \r\n            <Button\r\n              style={styles.button}\r\n              color=\"#757\"\r\n              title=\"Start Chatting\"\r\n              onPress={\r\n                () =>\r\n                  this.props.navigation.navigate(\"Chat\", {\r\n                    name: this.state.name,\r\n                    color: this.state.color,\r\n                  }) // sends state color and name as props to Chat.js\r\n              }\r\n            />\r\n\r\n          </TouchableOpacity>\r\n\r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 70,\r\n    marginBottom: 20,\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  image: {\r\n    flex: 1,\r\n    opacity: 100,\r\n  },\r\n\r\n  button: {\r\n    fontSize: 16,\r\n    fontWeight: \"600\",\r\n    color: \"#ffffff\",\r\n  },\r\n\r\n  roundButtonBlack: {\r\n    borderWidth: 10,\r\n    borderRadius: 25,\r\n    width: 35,\r\n    height: 35,\r\n    borderColor: \"#090C08\",\r\n  },\r\n\r\n  roundButtonPurple: {\r\n    borderColor: \"#474056\",\r\n    borderWidth: 10,\r\n    borderRadius: 25,\r\n    width: 35,\r\n    height: 35,\r\n  },\r\n\r\nroundButtonBlue: {\r\nborderColor: \"#8A95A5\",\r\nborderWidth: 10,\r\nborderRadius: 25,\r\nwidth: 35,\r\nheight: 35,\r\n  },\r\n\r\n  roundButtonGreen: {\r\nborderColor: \"#B9C6AE\",\r\nborderWidth: 10,\r\nborderRadius: 25,\r\nwidth: 35,\r\nheight: 35,\r\n\r\n  },\r\n\r\nroundButtonView: {\r\ndisplay: 'flex',\r\nflexDirection: 'row',\r\njustifyContent: 'space-between',\r\nmarginBottom: 20,\r\nmarginTop: 20,\r\nmarginRight: 125\r\n},\r\n \r\n  heading: {\r\n    flex: 1,\r\n    fontSize: 45,\r\n    fontWeight: \"bold\",\r\n    color: \"#ffffff\",\r\n  },\r\n\r\n  name: {\r\n    fontSize: 16,\r\n    fontWeight: \"300\",\r\n    color: \"#757083\",\r\n    opacity: 50,\r\n    marginBottom: 10,\r\n    borderColor: \"#757083\",\r\n    borderWidth: 2,\r\n    borderStyle: \"solid\",\r\n    padding: 7,\r\n    paddingLeft: 10,\r\n    width: 315,\r\n    height: 65,\r\n    marginBottom: 20\r\n  },\r\n\r\n  background: {\r\n    backgroundColor: \"#ffffff\",\r\n    paddingTop: 15,\r\n    paddingBottom: 15,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    marginLeft: 30,\r\n    marginRight: 30\r\n  },\r\n});\r\n\r\nexport default Start"]},"metadata":{},"sourceType":"module"}