{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { GiftedChat, InputToolbar, Bubble } from \"react-native-gifted-chat\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBtt9vShgdL-46-bVaMjuUYgHY7WKQVuWs\",\n  authDomain: \"chat-ab583.firebaseapp.com\",\n  projectId: \"chat-ab583\",\n  storageBucket: \"chat-ab583.appspot.com\",\n  messagingSenderId: \"395742845331\",\n  appId: \"1:395742845331:web:93505ccec2cd53ddaa7066\",\n  measurementId: \"G-W0QN4M0YVZ\"\n};\n\nvar Chat = function (_Component) {\n  _inherits(Chat, _Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this);\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var messages = [];\n      querySnapshot.forEach(function (doc) {\n        var data = doc.data();\n        messages.push({\n          _id: data._id,\n          text: data.text,\n          createdAt: data.createdAt.toDate(),\n          user: {\n            _id: data.user._id,\n            name: data.user.name,\n            avatar: data.user.avatar\n          },\n          image: data.image || null,\n          location: data.location || null\n        });\n      });\n\n      _this.setState({\n        messages: messages\n      });\n    };\n\n    _this.state = {\n      messages: [],\n      uid: 0,\n      user: {\n        _id: \"\",\n        name: \"\",\n        avatar: \"\"\n      },\n      isConnected: false,\n      image: null,\n      location: null\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    _this.referenceChatMessages = firebase.firestore().collection(\"messages\");\n    _this.refMsgsUser = null;\n    LogBox.ignoreLogs([\"Setting a timer\", \"Warning: ...\", \"undefined\", \"Animated.event now requires a second argument for options\"]);\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var name = this.props.route.params.name;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      NetInfo.fetch().then(function (connection) {\n        if (connection.isConnected) {\n          _this2.setState({\n            isConnected: true\n          });\n\n          console.log(\"online\");\n          _this2.unsubscribe = _this2.referenceChatMessages.orderBy(\"createdAt\", \"desc\").onSnapshot(_this2.onCollectionUpdate);\n          _this2.authUnsubscribe = firebase.auth().onAuthStateChanged(function _callee(user) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (user) {\n                      _context.next = 4;\n                      break;\n                    }\n\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(firebase.auth().signInAnonymously());\n\n                  case 3:\n                    return _context.abrupt(\"return\", _context.sent);\n\n                  case 4:\n                    _this2.setState({\n                      uid: user.uid,\n                      messages: [],\n                      user: {\n                        _id: user.uid,\n                        name: name,\n                        avatar: \"https://placeimg.com/140/140/any\"\n                      }\n                    });\n\n                    _this2.refMsgsUser = firebase.firestore().collection(\"messages\").where(\"uid\", \"==\", _this2.state.uid);\n\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          });\n\n          _this2.saveMessages();\n        } else {\n          console.log(\"offline\");\n\n          _this2.setState({\n            isConnected: false\n          });\n\n          _this2.getMessages();\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.authUnsubscribe();\n      this.unsubscribe();\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages() {\n      var messages;\n      return _regeneratorRuntime.async(function getMessages$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              messages = \"\";\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"messages\"));\n\n            case 4:\n              _context2.t0 = _context2.sent;\n\n              if (_context2.t0) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.t0 = [];\n\n            case 7:\n              messages = _context2.t0;\n              this.setState({\n                messages: JSON.parse(messages)\n              });\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t1 = _context2[\"catch\"](1);\n              console.log(_context2.t1.message);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[1, 11]], Promise);\n    }\n  }, {\n    key: \"saveMessages\",\n    value: function saveMessages() {\n      return _regeneratorRuntime.async(function saveMessages$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"messages\", JSON.stringify(this.state.messages)));\n\n            case 3:\n              _context3.next = 8;\n              break;\n\n            case 5:\n              _context3.prev = 5;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0.message);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[0, 5]], Promise);\n    }\n  }, {\n    key: \"deleteMessages\",\n    value: function deleteMessages() {\n      return _regeneratorRuntime.async(function deleteMessages$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"messages\"));\n\n            case 3:\n              this.setState({\n                messages: []\n              });\n              _context4.next = 9;\n              break;\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0.message);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, [[0, 6]], Promise);\n    }\n  }, {\n    key: \"addMessages\",\n    value: function addMessages() {\n      var message = this.state.messages[0];\n      this.referenceChatMessages.add({\n        _id: message._id,\n        text: message.text || \"\",\n        createdAt: message.createdAt,\n        user: this.state.user,\n        image: message.image || \"\",\n        location: message.location || null\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var _this3 = this;\n\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      }, function () {\n        _this3.addMessages();\n\n        _this3.saveMessages();\n      });\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(props) {\n      return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n        wrapperStyle: {\n          right: {\n            backgroundColor: \"#59c3c3\"\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"renderInputToolbar\",\n    value: function renderInputToolbar(props) {\n      if (this.state.isConnected == false) {} else {\n        return _jsx(InputToolbar, _objectSpread({}, props));\n      }\n    }\n  }, {\n    key: \"renderCustomView\",\n    value: function renderCustomView(props) {\n      var currentMessage = props.currentMessage;\n\n      if (currentMessage.location) {\n        return _jsx(MapView, {\n          style: {\n            width: 150,\n            height: 100,\n            borderRadius: 13,\n            margin: 3\n          },\n          region: {\n            latitude: currentMessage.location.latitude,\n            longitude: currentMessage.location.longitude,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var color = this.props.route.params;\n      return _jsx(View, {\n        style: {\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: _jsxs(View, {\n          style: {\n            flex: 1,\n            width: \"88%\",\n            paddingBottom: 10,\n            justifyContent: \"center\",\n            borderRadius: 5,\n            backgroundColor: color\n          },\n          children: [_jsx(GiftedChat, {\n            renderBubble: this.renderBubble.bind(this),\n            renderInputToolbar: this.renderInputToolbar.bind(this),\n            messages: this.state.messages,\n            user: this.state.user,\n            onSend: function onSend(messages) {\n              return _this4.onSend(messages);\n            },\n            renderActions: this.renderCustomActions,\n            renderCustomView: this.renderCustomView,\n            user: {\n              _id: this.state.user._id,\n              name: this.state.name,\n              avatar: this.state.user.avatar\n            }\n          }), Platform.OS === \"android\" ? _jsx(KeyboardAvoidingView, {\n            behavior: \"height\"\n          }) : null]\n        })\n      });\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport { Chat as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  giftedChat: {\n    flex: 1,\n    width: \"88%\",\n    paddingBottom: 10,\n    justifyContent: \"center\",\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/baile/Documents/hello-world/components/Chat.js"],"names":["React","Component","GiftedChat","InputToolbar","Bubble","firebase","AsyncStorage","NetInfo","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Chat","props","onCollectionUpdate","querySnapshot","messages","forEach","doc","data","push","_id","text","createdAt","toDate","user","name","avatar","image","location","setState","state","uid","isConnected","apps","length","initializeApp","referenceChatMessages","firestore","collection","refMsgsUser","LogBox","ignoreLogs","route","params","navigation","setOptions","title","fetch","then","connection","console","log","unsubscribe","orderBy","onSnapshot","authUnsubscribe","auth","onAuthStateChanged","signInAnonymously","where","saveMessages","getMessages","getItem","JSON","parse","message","setItem","stringify","removeItem","add","previousState","append","addMessages","right","backgroundColor","currentMessage","width","height","borderRadius","margin","latitude","longitude","latitudeDelta","longitudeDelta","color","flex","alignItems","justifyContent","paddingBottom","renderBubble","bind","renderInputToolbar","onSend","renderCustomActions","renderCustomView","Platform","OS","styles","StyleSheet","create","container","giftedChat"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { GiftedChat, InputToolbar, Bubble } from \"react-native-gifted-chat\";\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Platform,\r\n  KeyboardAvoidingView,\r\n  LogBox,\r\n} from \"react-native\";\r\n\r\nimport firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\n\r\n\r\n// firebase config for the app\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBtt9vShgdL-46-bVaMjuUYgHY7WKQVuWs\",\r\n  authDomain: \"chat-ab583.firebaseapp.com\",\r\n  projectId: \"chat-ab583\",\r\n  storageBucket: \"chat-ab583.appspot.com\",\r\n  messagingSenderId: \"395742845331\",\r\n  appId: \"1:395742845331:web:93505ccec2cd53ddaa7066\",\r\n  measurementId: \"G-W0QN4M0YVZ\",\r\n};\r\n\r\nexport default class Chat extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      messages: [],\r\n      uid: 0,\r\n      user: {\r\n        _id: \"\",\r\n        name: \"\",\r\n        avatar: \"\",\r\n      },\r\n      isConnected: false,\r\n      image: null,\r\n      location: null,\r\n    };\r\n\r\n    //initializing firebase\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(firebaseConfig);\r\n    }\r\n    // reference to the Firestore message collection\r\n    this.referenceChatMessages = firebase.firestore().collection(\"messages\");\r\n    this.refMsgsUser = null;\r\n\r\n    // To remove warning message in the console\r\n    LogBox.ignoreLogs([\r\n      \"Setting a timer\",\r\n      \"Warning: ...\",\r\n      \"undefined\",\r\n      \"Animated.event now requires a second argument for options\",\r\n    ]);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Set the page title once Chat is loaded\r\n    let { name } = this.props.route.params;\r\n    \r\n    // Adds the name to top of screen\r\n    this.props.navigation.setOptions({ title: name });\r\n\r\n    // checks if user is online or offline\r\n    NetInfo.fetch().then((connection) => {\r\n      //when user is online...\r\n      if (connection.isConnected) {\r\n        this.setState({ isConnected: true });\r\n        console.log(\"online\");\r\n\r\n        // listens for updates in the collection\r\n        this.unsubscribe = this.referenceChatMessages\r\n          .orderBy(\"createdAt\", \"desc\")\r\n          .onSnapshot(this.onCollectionUpdate);\r\n\r\n        // user authentication performed first\r\n        this.authUnsubscribe = firebase\r\n          .auth()\r\n          .onAuthStateChanged(async (user) => {\r\n            if (!user) {\r\n              return await firebase.auth().signInAnonymously();\r\n            }\r\n            //update user state with currently active user data\r\n            this.setState({\r\n              uid: user.uid,\r\n              messages: [],\r\n              user: {\r\n                _id: user.uid,\r\n                name: name,\r\n                avatar: \"https://placeimg.com/140/140/any\",\r\n              },\r\n            });\r\n            //referencing messages of current user\r\n            this.refMsgsUser = firebase\r\n              .firestore()\r\n              .collection(\"messages\")\r\n              .where(\"uid\", \"==\", this.state.uid);\r\n          });\r\n        //saving messages locally to asyncStorage\r\n        this.saveMessages();\r\n      } else {\r\n        // when user is offline\r\n        console.log(\"offline\");\r\n        this.setState({ isConnected: false });\r\n        //get messages from asyncStorage\r\n        this.getMessages();\r\n      }\r\n    });\r\n  }\r\n\r\n  // when updated set the messages state with the current data\r\n  onCollectionUpdate = (querySnapshot) => {\r\n    const messages = [];\r\n    // go through each document\r\n    querySnapshot.forEach((doc) => {\r\n      // get the QueryDocumentSnapshot's data\r\n      let data = doc.data();\r\n      messages.push({\r\n        _id: data._id,\r\n        text: data.text,\r\n        createdAt: data.createdAt.toDate(),\r\n        user: {\r\n          _id: data.user._id,\r\n          name: data.user.name,\r\n          avatar: data.user.avatar,\r\n        },\r\n        image: data.image || null,\r\n        location: data.location || null,\r\n      });\r\n    });\r\n    this.setState({\r\n      messages: messages,\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    //unsubscribe from collection updates\r\n    this.authUnsubscribe();\r\n    this.unsubscribe();\r\n  }\r\n\r\n  // to read a messgae from async storage\r\n  async getMessages() {\r\n    let messages = \"\";\r\n    try {\r\n      messages = (await AsyncStorage.getItem(\"messages\")) || [];\r\n      this.setState({\r\n        messages: JSON.parse(messages),\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  // to save a messgae on async storage\r\n  async saveMessages() {\r\n    try {\r\n      await AsyncStorage.setItem(\r\n        \"messages\",\r\n        JSON.stringify(this.state.messages)\r\n      );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  // to delete a message from async storage\r\n  async deleteMessages() {\r\n    try {\r\n      await AsyncStorage.removeItem(\"messages\");\r\n      this.setState({\r\n        messages: [],\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  // Add messages to database\r\n  addMessages() {\r\n    const message = this.state.messages[0];\r\n    // add a new messages to the collection\r\n    this.referenceChatMessages.add({\r\n      _id: message._id,\r\n      text: message.text || \"\",\r\n      createdAt: message.createdAt,\r\n      user: this.state.user,\r\n      image: message.image || \"\",\r\n      location: message.location || null,\r\n    });\r\n  }\r\n\r\n  // calback function for when user sends a message\r\n  onSend(messages = []) {\r\n    this.setState(\r\n      (previousState) => ({\r\n        messages: GiftedChat.append(previousState.messages, messages),\r\n      }),\r\n      () => {\r\n        this.addMessages();\r\n        this.saveMessages();\r\n      }\r\n    );\r\n  }\r\n\r\n  // Customize the chat bubble background color\r\n  renderBubble(props) {\r\n    return (\r\n      <Bubble\r\n        {...props}\r\n        wrapperStyle={{\r\n          right: { backgroundColor: \"#59c3c3\" },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  // renders the chat input field toolbar only when user is online\r\n  renderInputToolbar(props) {\r\n    if (this.state.isConnected == false) {\r\n    } else {\r\n      return <InputToolbar {...props} />;\r\n    }\r\n  }\r\n\r\n  // Returns a mapview when user adds a location to current message\r\n  renderCustomView(props) {\r\n    const { currentMessage } = props;\r\n    if (currentMessage.location) {\r\n      return (\r\n        <MapView\r\n          style={{ width: 150, height: 100, borderRadius: 13, margin: 3 }}\r\n          region={{\r\n            latitude: currentMessage.location.latitude,\r\n            longitude: currentMessage.location.longitude,\r\n            latitudeDelta: 0.0922,\r\n            longitudeDelta: 0.0421,\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // action button to access communication features via an action sheet\r\n \r\n\r\n  render() {\r\n    // Set the background color selected from start screen\r\n    const color = this.props.route.params\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            width: \"88%\",\r\n            paddingBottom: 10,\r\n            justifyContent: \"center\",\r\n            borderRadius: 5,\r\n            backgroundColor: color,\r\n          }}\r\n        >\r\n          <GiftedChat\r\n            renderBubble={this.renderBubble.bind(this)}\r\n            renderInputToolbar={this.renderInputToolbar.bind(this)}\r\n            messages={this.state.messages}\r\n            user={this.state.user}\r\n            onSend={(messages) => this.onSend(messages)}\r\n            renderActions={this.renderCustomActions}\r\n            renderCustomView={this.renderCustomView}\r\n            user={{\r\n              _id: this.state.user._id,\r\n              name: this.state.name,\r\n              avatar: this.state.user.avatar,\r\n            }}\r\n          />\r\n          {Platform.OS === \"android\" ? (\r\n            <KeyboardAvoidingView behavior=\"height\" />\r\n          ) : null}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n \r\nconst styles = StyleSheet.create({\r\n\r\n  \r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  giftedChat: {\r\n    flex: 1,\r\n    width: \"88%\",\r\n    paddingBottom: 10,\r\n    justifyContent: \"center\",\r\n    borderRadius: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}