{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport react from 'react';\nimport Screen1 from \"./components/Screen1\";\nimport Screen2 from \"./components/Screen2\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar App = function (_react$Component) {\n  _inherits(App, _react$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(NavigationContainer, {\n        children: _jsx(Stack.Navigator, {\n          initialRouteName: \"Screen1\",\n          children: _jsx(Stack.Screen, {\n            name: true\n          })\n        })\n      });\n    }\n  }]);\n\n  return App;\n}(react.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/baile/hello-world/App.js"],"names":["react","Screen1","Screen2","NavigationContainer","createStackNavigator","Stack","App","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;AAEA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;;IAEqBE,G;;;;;;;;;;;;;WACrB,kBAAS;AACT,aACA,KAAC,mBAAD;AAAA,kBACA,KAAC,KAAD,CAAO,SAAP;AACA,UAAA,gBAAgB,EAAC,SADjB;AAAA,oBAGE,KAAC,KAAD,CAAO,MAAP;AACF,YAAA,IAAI;AADF;AAHF;AADA,QADA;AAYE;;;;EAd+BN,KAAK,CAACO,S;;SAAlBD,G","sourcesContent":["import react from 'react'\nimport Screen1 from './components/Screen1';\nimport Screen2 from './components/Screen2';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst Stack = createStackNavigator();\n\nexport default class App extends react.Component {\nrender() {\nreturn (\n<NavigationContainer>\n<Stack.Navigator\ninitialRouteName='Screen1'\n>\n  <Stack.Screen\nname\n  />\n\n</Stack.Navigator>\n</NavigationContainer>\n  );\n }\n}"]},"metadata":{},"sourceType":"module"}