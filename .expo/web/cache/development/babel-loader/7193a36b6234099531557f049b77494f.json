{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { TextInput, TouchableOpacity } from \"react-native-gesture-handler\";\nimport bgImage from \"../assets/img/Background.png\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Start = function (_Component) {\n  _inherits(Start, _Component);\n\n  var _super = _createSuper(Start);\n\n  function Start() {\n    var _this;\n\n    _classCallCheck(this, Start);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: \"\",\n      bgColor: \"\"\n    };\n\n    _this.changeBgColor = function (newColor) {\n      _this.setState({\n        bgColor: newColor\n      });\n    };\n\n    _this.colors = {\n      grey: \"#5b5b5b\",\n      purple: \"#8c78be\",\n      yellow: \"#c9ab51\",\n      blue: \"#3e77a0\"\n    };\n    return _this;\n  }\n\n  _createClass(Start, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsxs(ImageBackground, {\n          source: bgImage,\n          resizeMode: \"cover\",\n          style: styles.bgImage,\n          children: [_jsx(View, {\n            style: styles.titleBox,\n            children: _jsx(Text, {\n              style: styles.titleText,\n              children: \"TimeSlip\"\n            })\n          }), _jsxs(View, {\n            style: styles.mainContent,\n            children: [_jsxs(View, {\n              style: styles.inputField,\n              children: [_jsx(Icon, {\n                style: styles.icon,\n                name: \"user\",\n                size: 30,\n                color: \"#888\"\n              }), _jsx(TextInput, {\n                accessible: true,\n                accessibilityLabel: \"Your Name\",\n                accessibilityHint: \"Type the name you want to use in the chat session\",\n                style: styles.inputText,\n                onChangeText: function onChangeText(text) {\n                  return _this2.setState({\n                    name: text\n                  });\n                },\n                value: this.state.name,\n                placeholder: \"Your Name\"\n              })]\n            }), _jsxs(View, {\n              style: styles.colorSelector,\n              children: [_jsx(Text, {\n                style: styles.colorsTitle,\n                children: \"Choose Background Color\"\n              }), _jsxs(View, {\n                style: styles.colorsList,\n                children: [_jsx(TouchableOpacity, {\n                  accessible: true,\n                  accessibilityLabel: \"Select grey background\",\n                  accessibilityHint: \"Lets you choose grey background for the chat screen\",\n                  accessibilityRole: \"button\",\n                  onPress: function onPress() {\n                    return _this2.changeBgColor(_this2.colors.grey);\n                  },\n                  children: _jsx(View, {\n                    style: styles.color1\n                  })\n                }), _jsx(TouchableOpacity, {\n                  accessible: true,\n                  accessibilityLabel: \"Select purple background\",\n                  accessibilityHint: \"Lets you choose purple background for the chat screen\",\n                  accessibilityRole: \"button\",\n                  onPress: function onPress() {\n                    return _this2.changeBgColor(_this2.colors.purple);\n                  },\n                  children: _jsx(View, {\n                    style: styles.color2\n                  })\n                }), _jsx(TouchableOpacity, {\n                  accessible: true,\n                  accessibilityLabel: \"Select yellow background\",\n                  accessibilityHint: \"Lets you choose yellow background for the chat screen\",\n                  accessibilityRole: \"button\",\n                  onPress: function onPress() {\n                    return _this2.changeBgColor(_this2.colors.yellow);\n                  },\n                  children: _jsx(View, {\n                    style: styles.color3\n                  })\n                }), _jsx(TouchableOpacity, {\n                  accessible: true,\n                  accessibilityLabel: \"Select blue background\",\n                  accessibilityHint: \"Lets you choose blue background for the chat screen\",\n                  accessibilityRole: \"button\",\n                  onPress: function onPress() {\n                    return _this2.changeBgColor(_this2.colors.blue);\n                  },\n                  children: _jsx(View, {\n                    style: styles.color4\n                  })\n                })]\n              })]\n            }), _jsx(Pressable, {\n              style: styles.button,\n              accessible: true,\n              accessibilityLabel: \"Tab here to Start chatting\",\n              accessibilityHint: \"Lets you enter the chat screen\",\n              accessibilityRole: \"button\",\n              onPress: function onPress() {\n                return _this2.props.navigation.navigate(\"Chat\", {\n                  name: _this2.state.name,\n                  bgColor: _this2.state.bgColor\n                });\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Start Chatting\"\n              })\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Start;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  bgImage: {\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  titleBox: {\n    width: \"60%\",\n    height: \"auto\",\n    alignItems: \"center\",\n    marginTop: 50,\n    resizeMode: \"contain\",\n    flex: 1\n  },\n  titleText: {\n    fontSize: 45,\n    fontWeight: \"600\",\n    color: \"#ffffff\"\n  },\n  mainContent: {\n    width: \"88%\",\n    height: \"44%\",\n    marginBottom: 30,\n    backgroundColor: \"#ffffff\",\n    flexGrow: 1,\n    flexShrink: 0,\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    paddingTop: 15,\n    paddingBottom: 15,\n    borderRadius: 10,\n    height: 260,\n    minHeight: 260,\n    maxHeight: 300\n  },\n  inputField: {\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"#ffffff\",\n    borderWidth: 1,\n    borderColor: \"#000\",\n    height: 50,\n    width: \"88%\",\n    borderRadius: 5,\n    marginBottom: 40,\n    padding: 10\n  },\n  icon: {\n    marginRight: 15,\n    height: 25,\n    width: 25\n  },\n  inputText: {\n    fontSize: 16,\n    fontWeight: \"300\",\n    opacity: 0.5,\n    color: \"#888\"\n  },\n  colorSelector: {\n    flex: 1,\n    width: \"70%\"\n  },\n  colorsTitle: {\n    textAlign: \"center\",\n    fontSize: 16,\n    fontWeight: \"300\",\n    color: \"#757083\",\n    opacity: 1,\n    marginBottom: 10\n  },\n  colorsList: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  color1: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: \"#5b5b5b\"\n  },\n  color2: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: \"#8c78be\"\n  },\n  color3: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: \"#c9ab51\"\n  },\n  color4: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: \"#3e77a0\"\n  },\n  button: {\n    width: \"88%\",\n    height: 60,\n    padding: 20,\n    borderRadius: 10,\n    backgroundColor: \"#3d85c6\"\n  },\n  buttonText: {\n    textAlign: \"center\",\n    fontSize: 16,\n    fontWeight: \"600\",\n    color: \"#ffffff\"\n  }\n});\nexport default Start;","map":{"version":3,"sources":["C:/Users/baile/Documents/hello-world/components/Start.js"],"names":["React","Component","TextInput","TouchableOpacity","bgImage","Icon","Start","state","name","bgColor","changeBgColor","newColor","setState","colors","grey","purple","yellow","blue","styles","container","titleBox","titleText","mainContent","inputField","icon","inputText","text","colorSelector","colorsTitle","colorsList","color1","color2","color3","color4","button","props","navigation","navigate","buttonText","StyleSheet","create","flex","flexDirection","alignItems","justifyContent","width","height","marginTop","resizeMode","fontSize","fontWeight","color","marginBottom","backgroundColor","flexGrow","flexShrink","paddingTop","paddingBottom","borderRadius","minHeight","maxHeight","borderWidth","borderColor","padding","marginRight","opacity","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Button,\r\n  ImageBackground,\r\n  StyleSheet,\r\n  Pressable,\r\n} from \"react-native\";\r\n\r\nimport { TextInput, TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\n//importing images and icons\r\nimport bgImage from '../assets/img/Background.png'\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\n\r\nclass Start extends Component {\r\n  state = {\r\n    name: \"\",\r\n    bgColor: \"\",\r\n  };\r\n\r\n  /*\r\n   Updates the state with the background color choice of a user \r\n   from the colors list\r\n   */\r\n  changeBgColor = (newColor) => {\r\n    this.setState({ bgColor: newColor });\r\n  };\r\n  //background color choices\r\n  colors = {\r\n    grey: \"#5b5b5b\",\r\n    purple: \"#8c78be\",\r\n    yellow: \"#c9ab51\",\r\n    blue: \"#3e77a0\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ImageBackground\r\n          source={bgImage}\r\n          resizeMode=\"cover\"\r\n          style={styles.bgImage}\r\n        >\r\n          <View style={styles.titleBox}>\r\n            <Text style={styles.titleText}>TimeSlip</Text>\r\n          </View>\r\n\r\n          <View style={styles.mainContent}>\r\n            <View style={styles.inputField}>\r\n              <Icon style={styles.icon} name=\"user\" size={30} color=\"#888\" />\r\n              <TextInput\r\n                accessible={true}\r\n                accessibilityLabel=\"Your Name\"\r\n                accessibilityHint=\"Type the name you want to use in the chat session\"\r\n                style={styles.inputText}\r\n                onChangeText={(text) => this.setState({ name: text })}\r\n                value={this.state.name}\r\n                placeholder=\"Your Name\"\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.colorSelector}>\r\n              <Text style={styles.colorsTitle}>Choose Background Color</Text>\r\n\r\n              <View style={styles.colorsList}>\r\n                <TouchableOpacity\r\n                  accessible={true}\r\n                  accessibilityLabel=\"Select grey background\"\r\n                  accessibilityHint=\"Lets you choose grey background for the chat screen\"\r\n                  accessibilityRole=\"button\"\r\n                  onPress={() => this.changeBgColor(this.colors.grey)}\r\n                >\r\n                  <View style={styles.color1}></View>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                  accessible={true}\r\n                  accessibilityLabel=\"Select purple background\"\r\n                  accessibilityHint=\"Lets you choose purple background for the chat screen\"\r\n                  accessibilityRole=\"button\"\r\n                  onPress={() => this.changeBgColor(this.colors.purple)}\r\n                >\r\n                  <View style={styles.color2}></View>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                  accessible={true}\r\n                  accessibilityLabel=\"Select yellow background\"\r\n                  accessibilityHint=\"Lets you choose yellow background for the chat screen\"\r\n                  accessibilityRole=\"button\"\r\n                  onPress={() => this.changeBgColor(this.colors.yellow)}\r\n                >\r\n                  <View style={styles.color3}></View>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                  accessible={true}\r\n                  accessibilityLabel=\"Select blue background\"\r\n                  accessibilityHint=\"Lets you choose blue background for the chat screen\"\r\n                  accessibilityRole=\"button\"\r\n                  onPress={() => this.changeBgColor(this.colors.blue)}\r\n                >\r\n                  <View style={styles.color4}></View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n            <Pressable\r\n              style={styles.button}\r\n              accessible={true}\r\n              accessibilityLabel=\"Tab here to Start chatting\"\r\n              accessibilityHint=\"Lets you enter the chat screen\"\r\n              accessibilityRole=\"button\"\r\n              onPress={() =>\r\n                this.props.navigation.navigate(\"Chat\", {\r\n                  name: this.state.name,\r\n                  bgColor: this.state.bgColor,\r\n                })\r\n              }\r\n            >\r\n              <Text style={styles.buttonText}>Start Chatting</Text>\r\n            </Pressable>\r\n          </View>\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  bgImage: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  titleBox: {\r\n    width: \"60%\",\r\n    height: \"auto\",\r\n    alignItems: \"center\",\r\n    marginTop: 50,\r\n    resizeMode: \"contain\",\r\n    flex: 1,\r\n  },\r\n  titleText: {\r\n    fontSize: 45,\r\n    fontWeight: \"600\",\r\n    color: \"#ffffff\",\r\n  },\r\n  mainContent: {\r\n    width: \"88%\",\r\n    height: \"44%\",\r\n    marginBottom: 30,\r\n    backgroundColor: \"#ffffff\",\r\n    flexGrow: 1,\r\n    flexShrink: 0,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    paddingTop: 15,\r\n    paddingBottom: 15,\r\n    borderRadius: 10,\r\n    height: 260,\r\n    minHeight: 260,\r\n    maxHeight: 300,\r\n  },\r\n  inputField: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"flex-start\",\r\n    backgroundColor: \"#ffffff\",\r\n    borderWidth: 1,\r\n    borderColor: \"#000\",\r\n    height: 50,\r\n    width: \"88%\",\r\n    borderRadius: 5,\r\n    marginBottom: 40,\r\n    padding: 10,\r\n  },\r\n  icon: {\r\n    //marginLeft: 15,\r\n    //marginRight: 15,\r\n    marginRight: 15,\r\n    height: 25,\r\n    width: 25,\r\n  },\r\n  inputText: {\r\n    fontSize: 16,\r\n    fontWeight: \"300\",\r\n    opacity: 0.5,\r\n    color: \"#888\",\r\n  },\r\n  colorSelector: {\r\n    flex: 1,\r\n    width: \"70%\",\r\n  },\r\n  colorsTitle: {\r\n    textAlign: \"center\",\r\n    fontSize: 16,\r\n    fontWeight: \"300\",\r\n    color: \"#757083\",\r\n    opacity: 1,\r\n    marginBottom: 10,\r\n  },\r\n  colorsList: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  color1: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: \"#5b5b5b\",\r\n  },\r\n  color2: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: \"#8c78be\",\r\n  },\r\n  color3: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: \"#c9ab51\",\r\n  },\r\n  color4: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: \"#3e77a0\",\r\n  },\r\n  button: {\r\n    width: \"88%\",\r\n    height: 60,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    backgroundColor: \"#3d85c6\",\r\n  },\r\n  buttonText: {\r\n    textAlign: \"center\",\r\n    fontSize: 16,\r\n    fontWeight: \"600\",\r\n    color: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport default Start;\r\n"]},"metadata":{},"sourceType":"module"}